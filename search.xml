<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>crawler-1</title>
      <link href="2020/10/26/python-wc-1/"/>
      <url>2020/10/26/python-wc-1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script>    <div id="aplayer-QUYAHiSS" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="831939883" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#3DF3F3"    ></div><p>(｀・ω・´)记笔记方便复习。</p><h1 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h1><p>超文本传输协议，是一个基于“请求与响应”模式的、无状态（两次请求间无关联）的应用层协议（高于TTP协议）。</p><p>采用URL作为定位网络资源的标识。</p><p>&nbsp;</p><h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p>URL是通过HTTP协议存取资源的Internet路径，一个URL对应一个数据资源。</p><p>URL格式 ”http:// host [:port] [path]“</p><ul><li><p>host：合法的Internet主机域名或IP地址</p></li><li><p>port：端口号，缺省端口为80</p></li><li><p>path：请求资源的路径</p></li></ul><p>&nbsp;</p><h2 id="HTTP协议对资源的操作"><a href="#HTTP协议对资源的操作" class="headerlink" title="HTTP协议对资源的操作"></a>HTTP协议对资源的操作</h2><table><thead><tr><th align="left">方法</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">GET</td><td align="left">请求<u>获取</u>URL位置的资源</td></tr><tr><td align="left">HEAD</td><td align="left">请求<u>获取</u>URL位置资源的响应消息报告，即<strong>获得该资源的头部信息</strong></td></tr><tr><td align="left">POST</td><td align="left">请求向URL位置的资源后<u><strong>附加</strong></u>新的数据</td></tr><tr><td align="left">PUT</td><td align="left">请求向URL位置<u>存储</u>一个资源，<strong>覆盖</strong>原URL位置的资源</td></tr><tr><td align="left">PATCH</td><td align="left">请求局部更新URL位置的资源，即**<u>改变</u><strong>该处资源</strong>的部分内容</td></tr><tr><td align="left">DELETE</td><td align="left">请求删除URL位置存储的资源</td></tr></tbody></table><ul><li>资源较大时，可用HEAD获取头部信息</li><li>修改部分可用PATCH，节省网络带宽<br>&nbsp;<h1 id="Requests库"><a href="#Requests库" class="headerlink" title="Requests库"></a>Requests库</h1></li></ul><p>7种主要方法与上表一一对应，都通过调用Request库实现</p><p>以r = requests.get(url)为例，Request库包含Response与Request两个对象</p><p>&nbsp;</p><h3 id="Response对象的属性"><a href="#Response对象的属性" class="headerlink" title="Response对象的属性"></a>Response对象的属性</h3><table><thead><tr><th align="left">属性</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">r.status_code</td><td align="left">HTTP请求的返回状态，200表示连接成功，404表示失败</td></tr><tr><td align="left">r.text</td><td align="left">HTTP响应内容的字符串形式，即url对应的页面内容</td></tr><tr><td align="left">r.recoding</td><td align="left">从HTTP header中<strong>猜测</strong>的响应内容编码方式</td></tr><tr><td align="left">r.apparent_encoding</td><td align="left">从内容中<strong>分析</strong>出的响应内容编码方式（备选编码方式）</td></tr><tr><td align="left">r.content</td><td align="left">HTTP响应内容的二进制形式</td></tr></tbody></table><ul><li>encoding的编码方式是从HTTP header中的charset中获得的。若header中不存在charset，则认为编码为ISO-8859-1</li><li>apparent_encoding从内容分析可能出现的编码形式。<figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">r = requests.get(<span class="string">&quot;http://www.baidu.com&quot;</span>)</span><br><span class="line">r.status_code</span><br><span class="line"><span class="comment">#返回值200</span></span><br><span class="line">r.text</span><br><span class="line"><span class="comment">#返回内容乱码</span></span><br><span class="line">r.encoding</span><br><span class="line"><span class="comment">#返回编码&#x27;ISO-8859-1&#x27;</span></span><br><span class="line">r.apparent_encoding</span><br><span class="line"><span class="comment">#返回&#x27;utf-8&#x27;编码</span></span><br><span class="line">r.encoding = <span class="string">&#x27;utf-8&#x27;</span> <span class="comment">#备选编码替换原编码</span></span><br><span class="line">r.text</span><br><span class="line"><span class="comment">#返回内容不为乱码</span></span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;</p><h3 id="Requests库主要方法"><a href="#Requests库主要方法" class="headerlink" title="Requests库主要方法"></a>Requests库主要方法</h3><p>requests.request(method, url, **kwargs)</p><p>method：请求方式，对应get/put/post等7种</p><p>url：拟获取页面的url链接</p><p>**kwargs：控制访问的参数，共13个</p><p>&nbsp;</p><h4 id="params"><a href="#params" class="headerlink" title="params"></a>params</h4><p>字典或字节序列，作为参数增加到url中</p><p>eg：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kv = &#123;‘key1<span class="string">&#x27;: &#x27;</span>value<span class="string">&#x27;, &#x27;</span>key2<span class="string">&#x27;: &#x27;</span>value2<span class="string">&#x27;&#125;</span></span><br><span class="line"><span class="string">r = requests.post(&#x27;</span>http://python123.io/ws<span class="string">&#x27;, params=kv)</span></span><br><span class="line"><span class="string">print(r.url)</span></span><br></pre></td></tr></table></figure><p>输出值<a href="http://python123.io/ws**?key1=value1&amp;key2=value2">http://python123.io/ws**?key1=value1&amp;key2=value2</a>**</p><p>使得url中附加参数，服务器根据参数筛选资源返回</p><p>&nbsp;</p><h4 id="data"><a href="#data" class="headerlink" title="data"></a>data</h4><p>字典、字节序列或文件对象，作为Request的内容。向服务器提交资源时使用。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kv = &#123;‘key1<span class="string">&#x27;: &#x27;</span>value<span class="string">&#x27;, &#x27;</span>key2<span class="string">&#x27;: &#x27;</span>value2<span class="string">&#x27;&#125;</span></span><br><span class="line"><span class="string">r = requests.request(&#x27;</span>POST<span class="string">&#x27;, &#x27;</span>http://python123.io/ws<span class="string">&#x27;, data=kv)</span></span><br><span class="line"><span class="string">body = &#x27;</span>主体内容<span class="string">&#x27;</span></span><br><span class="line"><span class="string">r = requests.request(&#x27;</span>POST<span class="string">&#x27;, &#x27;</span>http://python123.io/ws<span class="string">&#x27;, data=body)</span></span><br></pre></td></tr></table></figure><p>与params不同，不放入url链接中，放入url对应位置作为数据存储</p><p>&nbsp;</p><h4 id="json"><a href="#json" class="headerlink" title="json"></a>json</h4><p>JSON格式的数据，作为Request的内容</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kv = &#123;‘key1<span class="string">&#x27;: &#x27;</span>value<span class="string">&#x27;&#125;</span></span><br><span class="line"><span class="string">r = requests.request(&#x27;</span>POST<span class="string">&#x27;, &#x27;</span>http://python123.io/ws<span class="string">&#x27;, json=kv)</span></span><br></pre></td></tr></table></figure><p>&nbsp;</p><h4 id="headers"><a href="#headers" class="headerlink" title="headers"></a>headers</h4><p>字典，HTTP定制头</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hd = &#123;<span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Chrome/10&#x27;</span>&#125;</span><br><span class="line">r = requests.request(<span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;http://python123.io/ws&#x27;</span>, headers=hd)</span><br></pre></td></tr></table></figure><p>以Chrom/10作为user-agent向服务器发起访问</p><p>&nbsp;</p><h4 id="cookies"><a href="#cookies" class="headerlink" title="cookies"></a>cookies</h4><p>字典或CookieJar，Request中的cookie</p><p>&nbsp;</p><h4 id="auth"><a href="#auth" class="headerlink" title="auth"></a>auth</h4><p>元组，支持HTTP认证功能</p><p>&nbsp;</p><h4 id="files"><a href="#files" class="headerlink" title="files"></a>files</h4><p>字典类型，传输文件</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fs = &#123;<span class="string">&#x27;file&#x27;</span>: <span class="built_in">open</span>(<span class="string">&#x27;data.xls&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>)&#125;</span><br><span class="line">r = requests.request(<span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;http://python123.io/ws&#x27;</span>, files=fs)</span><br></pre></td></tr></table></figure><p>&nbsp;</p><h4 id="timeout"><a href="#timeout" class="headerlink" title="timeout"></a>timeout</h4><p>设定超时时间，单位为s</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r = requests.request(<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;http://www.baidu.com&#x27;</span>, timeout=<span class="number">10</span>)</span><br></pre></td></tr></table></figure><p>若超时无返回值，则会产生timeout异常</p><p>&nbsp;</p><h4 id="proxies"><a href="#proxies" class="headerlink" title="proxies"></a>proxies</h4><p>字典类型，设定访问代理服务器，可以增加登录认证</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pxs = &#123;<span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;http://user:pass@10.10.10.1:1234&#x27;</span><span class="comment">#用户名及密码设置</span></span><br><span class="line">   <span class="string">&#x27;https&#x27;</span>: <span class="string">&#x27;http://user:pass@10.10.10.1:1234&#x27;</span> &#125;</span><br><span class="line">r = requests.request(<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;http://www.baidu.com&#x27;</span>, proxies=pxs)</span><br></pre></td></tr></table></figure><p>例中访问百度时的ip即为代理服务器地址，用以隐藏ip</p><p>&nbsp;</p><h4 id="allow-redirects"><a href="#allow-redirects" class="headerlink" title="allow_redirects"></a>allow_redirects</h4><p>重定向开关，默认为true</p><p>&nbsp;</p><h4 id="stream"><a href="#stream" class="headerlink" title="stream"></a>stream</h4><p>获取内容立即下载开关，默认为true</p><p>&nbsp;</p><h4 id="verify"><a href="#verify" class="headerlink" title="verify"></a>verify</h4><p>认证SSL证书开关，默认为true</p><p>&nbsp;</p><h4 id="cert"><a href="#cert" class="headerlink" title="cert"></a>cert</h4><p>本地SSL证书路径</p><p>&nbsp;</p><h3 id="get方法-常用"><a href="#get方法-常用" class="headerlink" title="get方法(常用)"></a>get方法(常用)</h3><p><code>r = requests.get(url,params=None,**kwargs)</code></p><ul><li><p>url：拟获取页面的url链接</p></li><li><p>params：url中的额外参数，字典或字节流格式，可选</p></li><li><p>**kwargs：12个控制访问的参数</p></li></ul><p>&nbsp;</p><h3 id="head方法-常用"><a href="#head方法-常用" class="headerlink" title="head方法(常用)"></a>head方法(常用)</h3><p><code>r = requests.head(url,**kwargs)</code></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">r = requests.head(<span class="string">&#x27;http://httpbin.org/get&#x27;</span>)</span><br><span class="line">r.headers</span><br><span class="line"><span class="comment">#返回头部信息</span></span><br><span class="line">r.text</span><br><span class="line"><span class="comment">#返回内容为空</span></span><br></pre></td></tr></table></figure><p>&nbsp;</p><h3 id="post方法"><a href="#post方法" class="headerlink" title="post方法"></a>post方法</h3><p><code>r = requests.post(url,json=None,**kwargs)</code></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">payload = &#123;‘key1<span class="string">&#x27;: &#x27;</span>value<span class="string">&#x27;, &#x27;</span>key2<span class="string">&#x27;: &#x27;</span>value2<span class="string">&#x27;&#125;</span></span><br><span class="line"><span class="string">r = requests.post(&#x27;</span>http://httpbin.org/post<span class="string">&#x27;, data = payload)</span></span><br><span class="line"><span class="string">print(r.text)</span></span><br><span class="line"><span class="string">#当向URL post一个字典/键值对 默认存储在表单(post)</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span></span><br><span class="line">&#123; ···</span><br><span class="line"><span class="string">&quot;form&quot;</span>:&#123;</span><br><span class="line"><span class="string">&quot;key2&quot;</span>:<span class="string">&quot;value2&quot;</span>,</span><br><span class="line"><span class="string">&quot;key1&quot;</span>:<span class="string">&quot;value1&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">——————————————————————————————————————————————</span></span><br><span class="line"><span class="string">r = requests.post(&#x27;http://httpbin.org/post&#x27;, data = ‘ABC’)</span></span><br><span class="line"><span class="string">print(r.text)</span></span><br><span class="line"><span class="string">#post字符串 相应在data中</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">&#123; ···</span><br><span class="line"><span class="string">&quot;data&quot;</span>: <span class="string">&quot;ABC&quot;</span></span><br><span class="line"><span class="string">&quot;form&quot;</span>:&#123;&#125;,</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>&nbsp;</p><h3 id="put方法"><a href="#put方法" class="headerlink" title="put方法"></a>put方法</h3><p><code>r = requests.put(url,data=None,**kwargs)</code></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">payload = &#123;‘key1<span class="string">&#x27;: &#x27;</span>value<span class="string">&#x27;, &#x27;</span>key2<span class="string">&#x27;: &#x27;</span>value2<span class="string">&#x27;&#125;</span></span><br><span class="line"><span class="string">r = requests.put(&#x27;</span>http://httpbin.org/post<span class="string">&#x27;, data = payload)</span></span><br><span class="line"><span class="string">print(r.text)</span></span><br><span class="line"><span class="string">#与post方法类似，覆盖掉原有数据</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span></span><br><span class="line">&#123; ···</span><br><span class="line"><span class="string">&quot;form&quot;</span>:&#123;</span><br><span class="line"><span class="string">&quot;key2&quot;</span>:<span class="string">&quot;value2&quot;</span>,</span><br><span class="line"><span class="string">&quot;key1&quot;</span>:<span class="string">&quot;value1&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>&nbsp;</p><h3 id="patch方法"><a href="#patch方法" class="headerlink" title="patch方法"></a>patch方法</h3><p><code>r = requests.get(url,data=None,**kwargs)</code></p><p>&nbsp;</p><h3 id="delete方法"><a href="#delete方法" class="headerlink" title="delete方法"></a>delete方法</h3><p><code>r = requests.delete(url,**kwargs)</code></p><p>&nbsp;</p><h1 id="爬取网页通用代码框架"><a href="#爬取网页通用代码框架" class="headerlink" title="爬取网页通用代码框架"></a>爬取网页通用代码框架</h1><h2 id="几种常见的异常"><a href="#几种常见的异常" class="headerlink" title="几种常见的异常"></a>几种常见的异常</h2><table><thead><tr><th align="left">异常</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">requests.ConnectionError</td><td align="left">网络连接错误异常，如DNS查询失败、拒绝连接等</td></tr><tr><td align="left">requests.HTTPError</td><td align="left">HTTP错误异常</td></tr><tr><td align="left">requests.URLRequired</td><td align="left">URL缺失异常</td></tr><tr><td align="left">requests.TooMantRedirects</td><td align="left">超过最大重定向次数，产生重定向异常</td></tr><tr><td align="left">requests.ConnectTimeout</td><td align="left"><strong>连接</strong>远程服务器<strong>超时</strong>异常</td></tr><tr><td align="left">requests.Timeout</td><td align="left">请求<strong>URL超时</strong>，产生超时异常</td></tr></tbody></table><p><strong>r.rasis_for_status()</strong></p><p>如果不是200，产生异常requests.HTTPError</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHTMLText</span>(<span class="params">url</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(url,timeout=<span class="number">30</span>)</span><br><span class="line">        r.raise_for_status()</span><br><span class="line">        r.encoding = r.apparent_encoding</span><br><span class="line">        <span class="keyword">return</span> r.text</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;产生异常&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    url=<span class="string">&quot;http://www.baidu.com&quot;</span></span><br><span class="line">    print(getHTMLText(url))</span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1qs411n79v">参考资料</a></p>]]></content>
      
      
      <categories>
          
          <category> python爬虫学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bilibili安全挑战赛（1-5）</title>
      <link href="2020/10/24/bilibili-CTF(1-5)/"/>
      <url>2020/10/24/bilibili-CTF(1-5)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p><a href="https://www.bilibili.com/blackboard/activity-20201024.html"><strong>bilibili安全挑战赛</strong></a> </p><p><strong>关于网络安全方面的学习，入门尝试，浏览器为Firefox。</strong></p><p><strong>线上比赛一般以解题模式（Jeopardy）为主。</strong></p><h2 id="第一题：页面的背后是什么？"><a href="#第一题：页面的背后是什么？" class="headerlink" title="第一题：页面的背后是什么？"></a>第一题：页面的背后是什么？</h2><p>&emsp;<a href="http://45.113.201.36/index.html">http://45.113.201.36/index.html</a></p><p><img src="https://cdn.jsdelivr.net/gh/s1003063367/cdn/bictf/bictf-11.jpg" alt="Audits - Lighthouse" loading="lazy"></p><p>  &emsp;&emsp;  第一题对网页元素审查即可。</p><p><img src="https://cdn.jsdelivr.net/gh/s1003063367/cdn/bictf/bictf-12.jpg" alt="Audits - Lighthouse" loading="lazy"></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><h2 id="第二题：-真正的秘密只有特殊的设备才能看到"><a href="#第二题：-真正的秘密只有特殊的设备才能看到" class="headerlink" title="第二题： 真正的秘密只有特殊的设备才能看到"></a>第二题： 真正的秘密只有特殊的设备才能看到</h2><p>&emsp;<a href="http://45.113.201.36/index.html">http://45.113.201.36/index.html</a></p><p><img src="https://cdn.jsdelivr.net/gh/s1003063367/cdn/bictf/bictf-11.jpg" alt="Audits - Lighthouse" loading="lazy"><em>需要使用bilibili Security Browser浏览器访问～</em></p><p> &emsp;&emsp;   根据提供的信息，可知用户代理名称bilibili Security Browser</p><p><img src="https://cdn.jsdelivr.net/gh/s1003063367/cdn/bictf/BICTF-21.jpg" alt="Audits - Lighthouse" loading="lazy"></p><p>  &emsp;&emsp;  编辑User-Agent重发文件名为2的请求，即可得到data。</p><p><img src="https://cdn.jsdelivr.net/gh/s1003063367/cdn/bictf/bictf-22.jpg" alt="Audits - Lighthouse" loading="lazy"></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><h2 id="第三题：-密码是啥？"><a href="#第三题：-密码是啥？" class="headerlink" title="第三题： 密码是啥？"></a>第三题： 密码是啥？</h2><p>&emsp;<a href="http://45.113.201.36/login.html">http://45.113.201.36/login.html</a></p><p><img src="https://cdn.jsdelivr.net/gh/s1003063367/cdn/bictf/bictf-31.jpg" alt="Audits - Lighthouse" loading="lazy"></p><p> &emsp;&emsp;   账号：admin    密码：bilibili</p><p> &emsp;&emsp;   送分题 (゜-゜)つロ 干杯~</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><h2 id="第四题：-对不起，权限不足"><a href="#第四题：-对不起，权限不足" class="headerlink" title="第四题： 对不起，权限不足"></a>第四题： 对不起，权限不足</h2><p>&emsp;<a href="http://45.113.201.36/superadmin.html">http://45.113.201.36/superadmin.html</a></p><p>&emsp;&emsp;    元素审查得到信息</p><p><img src="https://cdn.jsdelivr.net/gh/s1003063367/cdn/bictf/bictf-41.jpg" alt="Audits - Lighthouse" loading="lazy"></p><table><tr><td bgcolor=#DCDCDC>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;有些秘密只有超级管理员才能看见哦~</td></tr></table><p>&emsp;&emsp;    编辑superadmin文件，在cookie一行找到了md5加密的role：ee11cbb19052e40b07aac0ca060c23ee，解密后为user。</p><p>&emsp;    说明要将超级管理员加密后对应修改，首先尝试的是superadmin，但编辑重发后并没有得到data，又试了试计算机的超级&amp;emsp管理员     Administrator，得到响应。</p><p><img src="https://cdn.jsdelivr.net/gh/s1003063367/cdn/bictf/bictf-42.jpg" alt="Audits - Lighthouse" loading="lazy"></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><h2 id="第五题：-别人的秘密"><a href="#第五题：-别人的秘密" class="headerlink" title="第五题： 别人的秘密"></a>第五题： 别人的秘密</h2><p>&emsp;<a href="http://45.113.201.36/user.html">http://45.113.201.36/user.html</a></p><p><img src="https://cdn.jsdelivr.net/gh/s1003063367/cdn/bictf/bictf-51.jpg" alt="Audits - Lighthouse" loading="lazy"></p><p>&emsp;&emsp;只提供了一条有效文件，并且给出uid=100336889这一参数。</p><p>&emsp;&emsp;分析代码后没有得出有效信息，需要暴力破解。</p><p><img src="https://cdn.jsdelivr.net/gh/s1003063367/cdn/bictf/bictf-52.jpg" alt="Audits - Lighthouse" loading="lazy"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">uid = <span class="number">100336889</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;Cookie&quot;</span>: <span class="string">&quot;对应填入&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;http://45.113.201.36/user.html&quot;</span>,</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>:<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 Safari/537.36&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    resp = requests.get(<span class="string">&quot;http://45.113.201.36/api/ctf/5?uid=&quot;</span>+<span class="built_in">str</span>(uid),headers=headers)</span><br><span class="line">    print(uid)</span><br><span class="line">    print(resp.text)</span><br><span class="line">    jsonobj = json.loads(resp.text)</span><br><span class="line">    <span class="keyword">if</span> jsonobj[<span class="string">&#x27;code&#x27;</span>] == <span class="number">200</span>:</span><br><span class="line">        print(<span class="string">&quot;找到你了！&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        uid += <span class="number">1</span></span><br><span class="line">        <span class="keyword">continue</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;循环几十次后便可得到flag。</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字体背景色</title>
      <link href="2020/10/23/%E8%83%8C%E6%99%AF%E8%89%B2/"/>
      <url>2020/10/23/%E8%83%8C%E6%99%AF%E8%89%B2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script>]]></content>
      
      
      <categories>
          
          <category> 资料 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>烟雨行舟</title>
      <link href="2020/10/21/music/"/>
      <url>2020/10/21/music/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script>    <div id="aplayer-NNYcYSbK" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="32922246" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#51535F"    ></div><p><img src="https://cdn.jsdelivr.net/gh/s1003063367/cdn/images/cover-yyxz.jpg" alt="Audits - Lighthouse" loading="lazy"></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
